@page "/ReservaCrear"

@rendermode InteractiveServer
@using CentroEventos.Aplicacion
@inject AltaReservaUseCase AltaReservaUseCase
@inject ServicioSesion UsuarioActual
@inject IRepositorioEventoDeportivo RepositorioEvento
@inject NavigationManager NavManager
@inject ListarEventosDeportivosUseCase ListarEventosDeportivos


<h3>Crear Nueva Reserva</h3>

@if (!string.IsNullOrEmpty(errorMensaje))
{
    <div class="alert alert-danger">@errorMensaje</div>
}

<EditForm Model="reserva" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Evento Deportivo</label>
        <InputSelect class="form-control" @bind-Value="reserva.EventoDeportivoId">
            <option value="">-- Seleccionar Evento --</option>
            @foreach (var evento in eventos)
            {
                <option value="@evento.Id">@evento.Nombre</option>
            }
        </InputSelect>
    </div>

    <div class="mb-3">
        <label class="form-label">Estado de Asistencia</label>
        <InputSelect class="form-control" @bind-Value="reserva.EstadoAsistencia">
            @foreach (EstadoAsistencia estado in Enum.GetValues(typeof(EstadoAsistencia)))
            {
                <option value="@((int)estado)">@estado</option>
            }
        </InputSelect>
    </div>

    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-success">Guardar Reserva</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="@Cancelar">Cancelar</button>
    </div>
</EditForm>

@code {
    private Reserva reserva = new();
    private List<EventoDeportivo> eventos = new();
    private string? errorMensaje;

    protected override void OnInitialized()
    {
        reserva.FechaAltaReserva = DateTime.Now; //revisar
        reserva.PersonaId = UsuarioActual.PersonaLogueada?.Id ?? 0;
        eventos = ListarEventosDeportivos.Ejecutar();
    }

    private void HandleSubmit()
    {
        try
        {
            AltaReservaUseCase.Ejecutar(reserva, reserva.PersonaId);
            NavManager.NavigateTo("/ReservaAdmin");
        }
        catch (Exception ex)
        {
            errorMensaje = $"No se pudo guardar la reserva: {ex.Message}";
        }
    }

    private void Cancelar()
    {
        NavManager.NavigateTo("/ReservaAdmin");
    }
}
