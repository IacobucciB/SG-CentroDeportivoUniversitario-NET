@page "/ReservaEditar"
@using CentroEventos.Aplicacion
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer
@inject NavigationManager NavManager
@inject ServicioSesion UsuarioActual
@inject ModificarReservaUseCase ModificarReservaUseCase
@inject ListarReservasUseCase ListarReservasUseCase
@inject ObtenerReservaPorIdUseCase ObtenerReservaPorIdUse


<h3>Editar Reserva</h3>

@if (!string.IsNullOrEmpty(errorMensaje))
{
    <div class="alert alert-danger">@errorMensaje</div>
}
else if (reserva != null)
{
    <EditForm Model="@reserva" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Fecha de Reserva</label>
            <InputDate class="form-control" @bind-Value="reserva.FechaAltaReserva" />
        </div>

        <div class="mb-3">
            <label class="form-label">Estado de Asistencia</label>
            <InputSelect class="form-control" @bind-Value="reserva.EstadoAsistencia">
                @foreach (EstadoAsistencia estado in Enum.GetValues(typeof(EstadoAsistencia)))
                {
                    <option value="@estado">@estado</option>
                }
            </InputSelect>
        </div>

        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-primary">Guardar Cambios</button>
            <button type="button" class="btn btn-secondary ms-2" @onclick="@(() => NavManager.NavigateTo("/reservaAdmin"))">Cancelar</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "idReserva")]
    public int idReserva { get; set; }

    private Reserva? reserva;
    private string? errorMensaje;

    protected override void OnInitialized()
    {
        reserva = ObtenerReservaPorIdUse.Ejecutar(idReserva);

        if (reserva == null)
        {
            errorMensaje = "Reserva no encontrada.";
        }
    }

    private void HandleSubmit()
    {
        try
        {
            if (reserva != null)
            {
                ModificarReservaUseCase.Ejecutar(reserva, UsuarioActual.PersonaLogueada?.Id ?? 0);
                NavManager.NavigateTo("/reservaAdmin");
            }
        }
        catch (Exception ex)
        {
            errorMensaje = "No se pudo guardar la reserva: " + ex.Message;
        }
    }
}
